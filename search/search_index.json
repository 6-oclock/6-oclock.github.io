{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u4f7f\u75286oclock \u00b6 \u53c2\u8003\uff1a https://biocontainers-edu.readthedocs.io/en/latest/what_is_biocontainers.html 6oclock\u9879\u76ee \u00b6 6oclock\u7684\u76ee\u6807 \u00b6 1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. 6oclock\u9879\u76ee\u7ec4\u6210 \u00b6","title":"Index"},{"location":"#6oclock","text":"\u53c2\u8003\uff1a https://biocontainers-edu.readthedocs.io/en/latest/what_is_biocontainers.html","title":"\u6b22\u8fce\u4f7f\u75286oclock"},{"location":"#6oclock_1","text":"","title":"6oclock\u9879\u76ee"},{"location":"#6oclock_2","text":"1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"6oclock\u7684\u76ee\u6807"},{"location":"#6oclock_3","text":"","title":"6oclock\u9879\u76ee\u7ec4\u6210"},{"location":"about/","text":"\u5173\u4e8e\u6211\u4eec \u00b6 GitHub\u7f51\u5740\uff1a https://github.com/6-oclock dokerhub\uff1a \u5b98\u65b9\u90ae\u4ef6\uff1a","title":"About"},{"location":"about/#_1","text":"GitHub\u7f51\u5740\uff1a https://github.com/6-oclock dokerhub\uff1a \u5b98\u65b9\u90ae\u4ef6\uff1a","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"clock/","text":"BioContainers \u00b6 BioContainers is a community-driven project that provides the infrastructure and basic guidelines to create, manage and distribute bioinformatics packages (e.g conda) and containers (e.g docker, singularity). BioContainers is based on the popular frameworks Conda , Docker and Singularity . BioContainers Goals \u00b6 Provide a base specification and infrastructure to develop, build and deploy new bioinformatics software including the source and examples. Provide a series of containers ready to be used by the bioinformatics community (https://biocontainers.pro/#/registry). Provide guidelines and help on how to create reproducible pipelines and workflows using bioinformatics containers. Coordinate and integrate developers and bioinformaticians to produce best practices of documentation and software development. Main components of BioContainers: \u00b6 Docker Containers provides a list of Dockerfile recipes to automatically build containers in BioContainers. Conda based Containers provides a list of Conda recipes to automatically build first a conda package and then a docker container. Biocontainers Registry is a hosted registry of all BioContainers images that are ready to be used (read more here biocontainersregistry). Specifications defines a set of guidelines and rules to contribute with BioContainers. BioContainers Community Architecture \u00b6 BioContainers is a community-driven project that allows bioinformaticians/developers to request, build and deploy bioinformatics containers. The following figure present the general BioContainers Architecture: How to Request a Container \u00b6 Users can request a container by opening an issue in the containers repository , In the previous workflow this is the first step performed by user henrik . The issue should contains the name of the software, the url of the code or binary to be packaged and information about the software see BioContainers specification . When the container is deployed and fully functional, the issue will be closed by the developer or the contributor to BioContainers. Before requesting a Container you should check the BioContainers Registry to make sure your requested tool does not exist already (read more about the registry in: biocontainersregistry). Importantly, the BioContainers community has implemented a \u201clabeled legend\u201d to tag each issue in the containers repository that should be used properly for on each issue. For example, for new containers the label Container Request should be used. Use a Docker BioContainer. \u00b6 When a container is deployed and the developer closes the issue in GitHub, the user henrik receives a notification that the container is ready. Then, the user can use docker command to pull or fetch the corresponding container. $ docker run biocontainers/blast:2.2.31 You can read other sections about Integration with BioConda and Using Singularity containers Note You can read other sections about Integration with BioConda and Using Singularity containers Reporting a problem with a container \u00b6 If the user finds a problem with a container an issue should be opened in the container repository , the user should use the broken tag ( see tags ). Developers of the project will pick-up the issue and deploy a new version of the container. A message will be delivered when the container has been fixed. BioContainers build architecture \u00b6 BioContainers build the docker containers from two different sources the Dockerfile or Conda recipes . The BioContainers team first try to create a Conda recipe (if it is possible). If not possible, then a Dockerfile is created. The system automatically builds the container after the pull request is merged into Conda github or BioContainer github repos. In order to be able to contribute to BioContainers you should be able to create a BioConda recipe or a Dockerfile recipe. Create a BioConda recipe \u00b6 Note Before you start please read the Conda documentation and how to setup conda in your machine In summary should follow these steps: Fork the BioConda recipes in GitHub <> __ Create your conda recipe ( following this tutorial ) Create a Pull Request in BioConda After the PR gets merged, a Conda package gets created and the corresponding docker container get pushed into Quay.io Registry and the BioContainers Registry Create a Dockerfile recipe This is a standard template for creating a new Dockerfile for BioContainers: Note Please always follow the Best Practices to create a Dockerfile. Here, an example Dockerfile for a Biocontainer: ################# BASE IMAGE ###################### FROM biocontainers/biocontainers:v1.0.0_cv4 ################## METADATA ###################### LABEL base_image=\"biocontainers:v1.0.0_cv4\" LABEL version=\"3\" LABEL software=\"crux\" LABEL software.version=\"3.2\" LABEL about.summary=\"a software toolkit for tandem mass spectrometry analysis\" LABEL about.home=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.documentation=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.license_file=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.license=\"SPDX:Apache-2.0\" LABEL extra.identifiers.biotools=\"crux\" LABEL about.tags=\"Proteomics\" ################## MAINTAINER ###################### MAINTAINER Yasset Perez-Riverol <ypriverol@gmail.com> ################## INSTALLATION ###################### USER biodocker RUN ZIP=crux-3.2.Linux.x86_64.zip && \\ wget https://github.com/BioContainers/containers/releases/download/Crux/$ZIP -O /tmp/$ZIP && \\ unzip /tmp/$ZIP -d /home/biodocker/bin/ && \\ rm /tmp/$ZIP && \\ ln -sv /home/biodocker/bin/*/bin/* /home/biodocker/bin/ ENV PATH /home/biodocker/bin:$PATH WORKDIR /data/ Every Dockerfile must have a metadata header with the following items: Base Image : All containers are based on a specific GNU/Linux system. There is no preference for a specific OS flavor but, to reduce disk usage, we recommend to use our own biocontainers/biocontainers image. Dockerfile Version : This is a single-number version system (ex: v1, v2, v3 \u2026). Every change in the file must increase in 1. Software : The name of the software installed inside the container. This can be a little tricky because some software demands libraries or dependencies. In this case the idea is to describe the \u201cprincipal\u201d software of the container, or the reason for building it. Software Version : The version of the software installed. Description : Single line description of the tool. Website : URL(s) for the program developer. Documentation : URL(s) containing information about how to use the software. License : URL(s) containing Licensing information. Tags : Program tags: Genomics, Protemomics, Transcriptomics, Metabolomics, General. Image Setting The next element is the base image and any configuration to the system you are installing. In the example above the Base Image is defined as biocontainers/biocontainers which is based on ubuntu latest LTS (Long Term Support) release and kept up to date with updates. Signature The File Author/ Maintainer signature. By default the Dockerfile only accepts one MAINTAINER tag. This will be the place the original author name. After updates are added to the file, the contributors name should appear in commented lines. # Maintainer MAINTAINER Yasset Perez-Riverol <ypriverol@gmail.com> Installation The installation area is where the instructions to build the software will be defined. Here is the correct place to put Dockerfile syntax and system commands. USER biodocker RUN ZIP=comet_binaries_2016012.zip && \\ wget https://github.com/BioDocker/software-archive/releases/download/Comet/$ZIP -O /tmp/$ZIP && \\ unzip /tmp/$ZIP -d /home/biodocker/bin/Comet/ && \\ chmod -R 755 /home/biodocker/bin/Comet/* && \\ rm /tmp/$ZIP RUN mv /home/biodocker/bin/Comet/comet_binaries_2016012/comet.2016012.linux.exe /home/biodocker/bin/Comet/comet ENV PATH /home/biodocker/bin/Comet:$PATH WORKDIR /data/ CMD [\"comet\"] Tips Commands should be merged with \u2018&& \u2018 whenever possible in order to create fewer intermediate images. A biodocker user has been created (id 1001) so that applications are not run as root. If possible, add the program to /usr/bin, otherwise, add to /home/biodocker/bin return to the regular USER change the WORKDIR to the data folder set the VOLUME to be exported (/data and /config are exported by default by the base image) EXPOSE ports (if necessary) Get involved \u00b6 Whether you want to make your own software available to others as a container, to just use them on your pipelines and analysis or just give opinions, you are most welcome. This is a community-driven project, that means everyone has a voice. Here are some general ideas: Browse our list of containers Propose your own ideas or software Interact with others if you think there is something missing.","title":"BioContainers"},{"location":"clock/#biocontainers","text":"BioContainers is a community-driven project that provides the infrastructure and basic guidelines to create, manage and distribute bioinformatics packages (e.g conda) and containers (e.g docker, singularity). BioContainers is based on the popular frameworks Conda , Docker and Singularity .","title":"BioContainers"},{"location":"clock/#biocontainers-goals","text":"Provide a base specification and infrastructure to develop, build and deploy new bioinformatics software including the source and examples. Provide a series of containers ready to be used by the bioinformatics community (https://biocontainers.pro/#/registry). Provide guidelines and help on how to create reproducible pipelines and workflows using bioinformatics containers. Coordinate and integrate developers and bioinformaticians to produce best practices of documentation and software development.","title":"BioContainers Goals"},{"location":"clock/#main-components-of-biocontainers","text":"Docker Containers provides a list of Dockerfile recipes to automatically build containers in BioContainers. Conda based Containers provides a list of Conda recipes to automatically build first a conda package and then a docker container. Biocontainers Registry is a hosted registry of all BioContainers images that are ready to be used (read more here biocontainersregistry). Specifications defines a set of guidelines and rules to contribute with BioContainers.","title":"Main components of BioContainers:"},{"location":"clock/#biocontainers-community-architecture","text":"BioContainers is a community-driven project that allows bioinformaticians/developers to request, build and deploy bioinformatics containers. The following figure present the general BioContainers Architecture:","title":"BioContainers Community Architecture"},{"location":"clock/#how-to-request-a-container","text":"Users can request a container by opening an issue in the containers repository , In the previous workflow this is the first step performed by user henrik . The issue should contains the name of the software, the url of the code or binary to be packaged and information about the software see BioContainers specification . When the container is deployed and fully functional, the issue will be closed by the developer or the contributor to BioContainers. Before requesting a Container you should check the BioContainers Registry to make sure your requested tool does not exist already (read more about the registry in: biocontainersregistry). Importantly, the BioContainers community has implemented a \u201clabeled legend\u201d to tag each issue in the containers repository that should be used properly for on each issue. For example, for new containers the label Container Request should be used.","title":"How to Request a Container"},{"location":"clock/#use-a-docker-biocontainer","text":"When a container is deployed and the developer closes the issue in GitHub, the user henrik receives a notification that the container is ready. Then, the user can use docker command to pull or fetch the corresponding container. $ docker run biocontainers/blast:2.2.31 You can read other sections about Integration with BioConda and Using Singularity containers Note You can read other sections about Integration with BioConda and Using Singularity containers","title":"Use a Docker BioContainer."},{"location":"clock/#reporting-a-problem-with-a-container","text":"If the user finds a problem with a container an issue should be opened in the container repository , the user should use the broken tag ( see tags ). Developers of the project will pick-up the issue and deploy a new version of the container. A message will be delivered when the container has been fixed.","title":"Reporting a problem with a container"},{"location":"clock/#biocontainers-build-architecture","text":"BioContainers build the docker containers from two different sources the Dockerfile or Conda recipes . The BioContainers team first try to create a Conda recipe (if it is possible). If not possible, then a Dockerfile is created. The system automatically builds the container after the pull request is merged into Conda github or BioContainer github repos. In order to be able to contribute to BioContainers you should be able to create a BioConda recipe or a Dockerfile recipe.","title":"BioContainers build architecture"},{"location":"clock/#create-a-bioconda-recipe","text":"Note Before you start please read the Conda documentation and how to setup conda in your machine In summary should follow these steps: Fork the BioConda recipes in GitHub <> __ Create your conda recipe ( following this tutorial ) Create a Pull Request in BioConda After the PR gets merged, a Conda package gets created and the corresponding docker container get pushed into Quay.io Registry and the BioContainers Registry Create a Dockerfile recipe This is a standard template for creating a new Dockerfile for BioContainers: Note Please always follow the Best Practices to create a Dockerfile. Here, an example Dockerfile for a Biocontainer: ################# BASE IMAGE ###################### FROM biocontainers/biocontainers:v1.0.0_cv4 ################## METADATA ###################### LABEL base_image=\"biocontainers:v1.0.0_cv4\" LABEL version=\"3\" LABEL software=\"crux\" LABEL software.version=\"3.2\" LABEL about.summary=\"a software toolkit for tandem mass spectrometry analysis\" LABEL about.home=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.documentation=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.license_file=\"http://cruxtoolkit.sourceforge.net/\" LABEL about.license=\"SPDX:Apache-2.0\" LABEL extra.identifiers.biotools=\"crux\" LABEL about.tags=\"Proteomics\" ################## MAINTAINER ###################### MAINTAINER Yasset Perez-Riverol <ypriverol@gmail.com> ################## INSTALLATION ###################### USER biodocker RUN ZIP=crux-3.2.Linux.x86_64.zip && \\ wget https://github.com/BioContainers/containers/releases/download/Crux/$ZIP -O /tmp/$ZIP && \\ unzip /tmp/$ZIP -d /home/biodocker/bin/ && \\ rm /tmp/$ZIP && \\ ln -sv /home/biodocker/bin/*/bin/* /home/biodocker/bin/ ENV PATH /home/biodocker/bin:$PATH WORKDIR /data/ Every Dockerfile must have a metadata header with the following items: Base Image : All containers are based on a specific GNU/Linux system. There is no preference for a specific OS flavor but, to reduce disk usage, we recommend to use our own biocontainers/biocontainers image. Dockerfile Version : This is a single-number version system (ex: v1, v2, v3 \u2026). Every change in the file must increase in 1. Software : The name of the software installed inside the container. This can be a little tricky because some software demands libraries or dependencies. In this case the idea is to describe the \u201cprincipal\u201d software of the container, or the reason for building it. Software Version : The version of the software installed. Description : Single line description of the tool. Website : URL(s) for the program developer. Documentation : URL(s) containing information about how to use the software. License : URL(s) containing Licensing information. Tags : Program tags: Genomics, Protemomics, Transcriptomics, Metabolomics, General. Image Setting The next element is the base image and any configuration to the system you are installing. In the example above the Base Image is defined as biocontainers/biocontainers which is based on ubuntu latest LTS (Long Term Support) release and kept up to date with updates. Signature The File Author/ Maintainer signature. By default the Dockerfile only accepts one MAINTAINER tag. This will be the place the original author name. After updates are added to the file, the contributors name should appear in commented lines. # Maintainer MAINTAINER Yasset Perez-Riverol <ypriverol@gmail.com> Installation The installation area is where the instructions to build the software will be defined. Here is the correct place to put Dockerfile syntax and system commands. USER biodocker RUN ZIP=comet_binaries_2016012.zip && \\ wget https://github.com/BioDocker/software-archive/releases/download/Comet/$ZIP -O /tmp/$ZIP && \\ unzip /tmp/$ZIP -d /home/biodocker/bin/Comet/ && \\ chmod -R 755 /home/biodocker/bin/Comet/* && \\ rm /tmp/$ZIP RUN mv /home/biodocker/bin/Comet/comet_binaries_2016012/comet.2016012.linux.exe /home/biodocker/bin/Comet/comet ENV PATH /home/biodocker/bin/Comet:$PATH WORKDIR /data/ CMD [\"comet\"] Tips Commands should be merged with \u2018&& \u2018 whenever possible in order to create fewer intermediate images. A biodocker user has been created (id 1001) so that applications are not run as root. If possible, add the program to /usr/bin, otherwise, add to /home/biodocker/bin return to the regular USER change the WORKDIR to the data folder set the VOLUME to be exported (/data and /config are exported by default by the base image) EXPOSE ports (if necessary)","title":"Create a BioConda recipe"},{"location":"clock/#get-involved","text":"Whether you want to make your own software available to others as a container, to just use them on your pipelines and analysis or just give opinions, you are most welcome. This is a community-driven project, that means everyone has a voice. Here are some general ideas: Browse our list of containers Propose your own ideas or software Interact with others if you think there is something missing.","title":"Get involved"},{"location":"docker/","text":"\u5bb9\u5668\u662f\u4ec0\u4e48? \u00b6 \u8f6f\u4ef6\u5bb9\u5668\u7528\u4e8e\u5c06\u8f6f\u4ef6\u7ec4\u4ef6\u548c\u76f8\u5e94\u7684\u4f9d\u8d56\u73af\u5883\u5c01\u88c5\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u5bb9\u5668\u4f7f\u6211\u4eec\u907f\u514d\u4ece\u5934\u5f00\u59cb\u5b89\u88c5\u8f6f\u4ef6\u4ee5\u53ca\u6240\u6709\u4f9d\u8d56\uff0c\u505a\u5230**\u4e0b\u8f7d\u5373\u53ef\u7528**\uff0c\u4f7f\u5f97\u4f7f\u7528\u590d\u6742\u7684linux\u8f6f\u4ef6\u50cf\u4f7f\u7528APP\u4e00\u6837\u7b80\u5355\u3002 \u5bb9\u5668\u5c01\u88c5\u4e86\u8f6f\u4ef6\u7ec4\u4ef6\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u8fd0\u884c\u6240\u5fc5\u987b\u7684\u6700\u5c11\u4f9d\u8d56\u73af\u5883\u3002 \u5bb9\u5668\u6613\u4e8e\u5c01\u88c5\uff0c\u4f53\u79ef\u5c0f\uff0c\u5177\u6709\u8de8\u5e73\u53f0\u7684\u4f18\u52bf\u3002 \u6211\u4eec\u901a\u8fc7\u5feb\u901f\u5b89\u88c5docker: $ docker pull biocontainers/dia-umpire:v1.4256_cv2 \u6ce8\uff1a \u8fd9\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u5c06\u5b89\u88c5dia-umpire\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879 \u5bb9\u5668\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0a\u6784\u5efa\u7684\u3002 \u4e0e\u865a\u62df\u673a\u4e0d\u540c\uff0c\u5bb9\u5668\u672c\u8eab\u4e0d\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u4f7f\u7528\u4f18\u5316\u7684\u7cfb\u7edf\u5e93\u6784\u5efa\u8f6f\u4ef6\u53ca\u5176\u4f9d\u8d56\uff0c\u5e76\u4f7f\u7528\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\u5185\u5b58\u7b49\u786c\u4ef6\u5b9e\u73b0\u8f6f\u4ef6\u8fd0\u884c\u7684\u76ee\u7684\u3002 \u5bb9\u5668\u901a\u5e38\u662f\u4e00\u4e2a\u7279\u5b9a\u8f6f\u4ef6\u7684\u5305\uff0c\u901a\u8fc7\u5c06\u4e00\u4e2a\u5bb9\u5668\u5b9e\u4f8b\u5316\u6765\u8fd0\u884c\u91cc\u8fb9\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u591a\u6b21\u5b9e\u4f8b\u5316\u540c\u4e00\u4e2a\u5bb9\u5668\u5e76\u4f7f\u5b83\u4eec\u72ec\u7acb\uff08\u4e92\u4e0d\u5e72\u6270\uff09\u8fd0\u884c\u3002 \u5bb9\u5668\u7684\u6280\u672f\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5bb9\u5668\uff1f \u00b6 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u751f\u7269\u4fe1\u606f\u5b66\u5206\u6790\u65f6\uff0c\u5e94\u5b89\u88c5\u548c\u914d\u7f6e\u51e0\u79cd\u751f\u7269\u4fe1\u606f\u5b66\u5de5\u5177\u548c\u8f6f\u4ef6\u3002 \u6b64\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5e76\u4e14\u9700\u8981\u5f88\u591a\u5de5\u4f5c\uff0c\u5305\u62ec\u5b89\u88c5\u591a\u4e2a\u4f9d\u8d56\u9879\u548c\u5de5\u5177\u3002 BioContainers\u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u8f6f\u4ef6\u5305\u548c\u5de5\u5177\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u672c\u5730\u8ba1\u7b97\u673a\uff0cHPC\u548c\u4e91\u4f53\u7cfb\u7ed3\u6784\u4e0a\u8fdb\u884c\u90e8\u7f72\u548c\u4f7f\u7528\u3002 linux 1 2 3 4 5 tabs: tab: title 1 content tab: title 2 content Content 1 Content 2 Content 3 </mat-tab-group","title":"dd"},{"location":"docker/#_1","text":"\u8f6f\u4ef6\u5bb9\u5668\u7528\u4e8e\u5c06\u8f6f\u4ef6\u7ec4\u4ef6\u548c\u76f8\u5e94\u7684\u4f9d\u8d56\u73af\u5883\u5c01\u88c5\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u5bb9\u5668\u4f7f\u6211\u4eec\u907f\u514d\u4ece\u5934\u5f00\u59cb\u5b89\u88c5\u8f6f\u4ef6\u4ee5\u53ca\u6240\u6709\u4f9d\u8d56\uff0c\u505a\u5230**\u4e0b\u8f7d\u5373\u53ef\u7528**\uff0c\u4f7f\u5f97\u4f7f\u7528\u590d\u6742\u7684linux\u8f6f\u4ef6\u50cf\u4f7f\u7528APP\u4e00\u6837\u7b80\u5355\u3002 \u5bb9\u5668\u5c01\u88c5\u4e86\u8f6f\u4ef6\u7ec4\u4ef6\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u8fd0\u884c\u6240\u5fc5\u987b\u7684\u6700\u5c11\u4f9d\u8d56\u73af\u5883\u3002 \u5bb9\u5668\u6613\u4e8e\u5c01\u88c5\uff0c\u4f53\u79ef\u5c0f\uff0c\u5177\u6709\u8de8\u5e73\u53f0\u7684\u4f18\u52bf\u3002 \u6211\u4eec\u901a\u8fc7\u5feb\u901f\u5b89\u88c5docker: $ docker pull biocontainers/dia-umpire:v1.4256_cv2 \u6ce8\uff1a \u8fd9\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u5c06\u5b89\u88c5dia-umpire\u53ca\u5176\u6240\u6709\u4f9d\u8d56\u9879 \u5bb9\u5668\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0a\u6784\u5efa\u7684\u3002 \u4e0e\u865a\u62df\u673a\u4e0d\u540c\uff0c\u5bb9\u5668\u672c\u8eab\u4e0d\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u4f7f\u7528\u4f18\u5316\u7684\u7cfb\u7edf\u5e93\u6784\u5efa\u8f6f\u4ef6\u53ca\u5176\u4f9d\u8d56\uff0c\u5e76\u4f7f\u7528\u4e3b\u673a\u7684\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\u5185\u5b58\u7b49\u786c\u4ef6\u5b9e\u73b0\u8f6f\u4ef6\u8fd0\u884c\u7684\u76ee\u7684\u3002 \u5bb9\u5668\u901a\u5e38\u662f\u4e00\u4e2a\u7279\u5b9a\u8f6f\u4ef6\u7684\u5305\uff0c\u901a\u8fc7\u5c06\u4e00\u4e2a\u5bb9\u5668\u5b9e\u4f8b\u5316\u6765\u8fd0\u884c\u91cc\u8fb9\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u591a\u6b21\u5b9e\u4f8b\u5316\u540c\u4e00\u4e2a\u5bb9\u5668\u5e76\u4f7f\u5b83\u4eec\u72ec\u7acb\uff08\u4e92\u4e0d\u5e72\u6270\uff09\u8fd0\u884c\u3002 \u5bb9\u5668\u7684\u6280\u672f\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u5bb9\u5668\u662f\u4ec0\u4e48?"},{"location":"docker/#_2","text":"\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u751f\u7269\u4fe1\u606f\u5b66\u5206\u6790\u65f6\uff0c\u5e94\u5b89\u88c5\u548c\u914d\u7f6e\u51e0\u79cd\u751f\u7269\u4fe1\u606f\u5b66\u5de5\u5177\u548c\u8f6f\u4ef6\u3002 \u6b64\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\uff0c\u5e76\u4e14\u9700\u8981\u5f88\u591a\u5de5\u4f5c\uff0c\u5305\u62ec\u5b89\u88c5\u591a\u4e2a\u4f9d\u8d56\u9879\u548c\u5de5\u5177\u3002 BioContainers\u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684\u8f6f\u4ef6\u5305\u548c\u5de5\u5177\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u672c\u5730\u8ba1\u7b97\u673a\uff0cHPC\u548c\u4e91\u4f53\u7cfb\u7ed3\u6784\u4e0a\u8fdb\u884c\u90e8\u7f72\u548c\u4f7f\u7528\u3002 linux 1 2 3 4 5 tabs: tab: title 1 content tab: title 2 content Content 1 Content 2 Content 3 </mat-tab-group","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5bb9\u5668\uff1f"}]}